/* eslint-disable @typescript-eslint/no-floating-promises */
/* eslint-disable @typescript-eslint/no-misused-promises */
import { useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useForm, type SubmitHandler } from "react-hook-form";
import { api } from "~/utils/api";

type MessageSellerForm = {
  message: string;
};

const ListingView: NextPage = () => {
  const messageSeller = api.listings.sendMessage.useMutation();
  const { isLoaded: isSignedIn } = useUser();
  const router = useRouter();

  const { register, handleSubmit, reset } = useForm<MessageSellerForm>();
  const onSubmit: SubmitHandler<MessageSellerForm> = (formData) => {
    messageSeller
      .mutateAsync({
        message: formData.message,
        listingId: router.query.id as string,
      })
      .then(() => reset());
  };

  const listing = api.listings.fetchListing.useQuery(
    {
      listingId: router.query.id as string,
    },
    { enabled: !!router.query.id }
  );

  if (!listing.data) {
    return (
      <div className="flex h-screen items-center justify-center">
        <div className="text-center">Unable to find the listing...</div>
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>View Listing</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-8 flex flex-col items-center">
        <h1 className="mb-4 text-2xl font-bold">{listing.data.name}</h1>
        <p className="mb-4 text-xl">{listing.data.description}</p>
        {isSignedIn && (
          <form onSubmit={handleSubmit(onSubmit)}>
            <div className="mb-6 flex md:grid-cols-2">
              <div>
                <label
                  htmlFor="item_name"
                  className="mb-2 block text-sm font-medium"
                >
                  Message
                </label>
                <input
                  placeholder="I'd like to buy this item..."
                  id="Message"
                  className="block h-20 w-full  rounded-lg border border-transparent bg-[#47424f] p-2.5 text-sm focus:border-blue-500 active:border-blue-500"
                  {...register("message", { required: true })}
                />
              </div>
            </div>
            <button
              type="submit"
              className="inline-flex w-full items-center rounded-lg bg-[#e4ff1b] px-3 py-2 text-center text-sm font-medium text-[#131019] hover:bg-[#c9e209] focus:outline-none focus:ring-4"
            >
              ${listing.data.price.toString()} - Message Seller
            </button>
          </form>
        )}
      </main>
    </>
  );
};

export default ListingView;
